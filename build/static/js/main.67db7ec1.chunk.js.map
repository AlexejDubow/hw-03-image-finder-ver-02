{"version":3,"sources":["components/Searchbar/Searchform/Searchform.jsx","components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","services/imagesApi.js","components/App/App.jsx","index.jsx"],"names":["Searchform","state","search","handleChange","value","target","setState","handleSubmit","e","preventDefault","props","onSubmit","this","className","type","name","autoComplete","autoFocus","placeholder","onChange","Component","Searchbar","ImageGalleryItem","images","onClick","map","id","webformatURL","largeImageURL","key","src","alt","ImageGallery","ButtonLoadMore","loadMore","Modal","closeModal","page","perPage","fetchImages","query","requestParams","axios","get","BASE_URL","App","isLoading","error","modalIsOpen","imagesAPI","then","data","hits","catch","finally","handleLoadMoreImages","windowScrollTo","err","console","handleModalOpen","handleCloseModal","handleKeyPress","code","window","addEventListener","removeEventListener","scrollTo","top","document","documentElement","scrollHeight","behavior","message","length","color","height","width","timeout","Button","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.67db7ec1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport \"./Searchform.css\";\r\n\r\nexport default class Searchform extends Component {\r\n  state = { search: '' };\r\n\r\n  handleChange = ( {target: {value}} ) => {\r\n    this.setState({\r\n      search: value,\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.search);\r\n    this.setState({search: ''})\r\n  }\r\n  \r\n\r\n  render() {\r\n    const { search } = this.state;\r\n    return (\r\n      <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n        <button type=\"submit\" className=\"SearchFormButton\">\r\n          <span className=\"SearchFormButtonLabel\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          name=\"search\"\r\n          className=\"SearchFormInput\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={this.handleChange}\r\n          value={search}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Searchform from './Searchform/Searchform';\r\n\r\nimport './Searchbar.css';\r\n\r\nconst Searchbar = ({ onSubmit }) =>(\r\n  <header className=\"Searchbar\">\r\n    <Searchform\r\n      onSubmit={onSubmit}\r\n      // onChange={onChange}\r\n    />\r\n  </header>\r\n);\r\nexport default Searchbar;\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n  // onChange: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ImageGalleryItem.css';\r\n\r\n\r\nconst ImageGalleryItem = ({ images, onClick }) => (\r\n  <>\r\n    {images.map(({ id, webformatURL, largeImageURL }) => (\r\n      <li className=\"ImageGalleryItem\" key={id}>\r\n        <img className=\"ImageGalleryItemImage\" src={webformatURL} alt=\"picter\" onClick={() => onClick(largeImageURL)}  />\r\n      </li>\r\n    ))}\r\n  </>\r\n);\r\n\r\nexport default ImageGalleryItem;\r\n\r\nImageGalleryItem.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  images: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    webformatURL: PropTypes.string.isRequired,\r\n  })).isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem';\r\n\r\nimport './ImageGallery.css';\r\n\r\nconst ImageGallery = ({ images, onClick }) => (\r\n  <>\r\n    <ul className=\"ImageGallery\">\r\n      <ImageGalleryItem images={images} onClick={onClick} />\r\n    </ul>\r\n  </>\r\n);\r\n\r\nexport default ImageGallery;\r\n\r\nImageGallery.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ButtonLoadMore.css';\r\n\r\nconst ButtonLoadMore = ({ loadMore }) => (\r\n  <button className=\"Button\" type=\"button\" onClick={loadMore}>Load more</button>\r\n);\r\n\r\nButtonLoadMore.propTypes = {\r\n  loadMore: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default ButtonLoadMore;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Modal.css';\r\n\r\nconst Modal = ({ largeImageURL, closeModal }) => (\r\n  <div className=\"Overlay\" onClick={closeModal}>\r\n    <div className=\"Modal\">\r\n      <img src={largeImageURL} alt=\"img\" />\r\n    </div>\r\n  </div>\r\n);\r\nModal.propTypes = {\r\n  closeModal: PropTypes.func.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n};\r\nexport default Modal;\r\n","import axios from 'axios';\r\n\r\n\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\nconst USER_KEY = '?key=16116679-c72078e20d7f40e9b0a227bf4';\r\n\r\nexport default {\r\n  page: 1,\r\n  perPage: 12,\r\n  fetchImages(query) {\r\n    const requestParams = `&q=${query}&page=${this.page}&per_page=${this.perPage}&image_type=all&orientation=horizontal`;\r\n    return axios.get(BASE_URL + USER_KEY + requestParams);\r\n  },\r\n  // incrementPage() {\r\n  //   this.page += 1;\r\n  // },\r\n  // resetPage() {\r\n  //   this.page = 1;\r\n  // },\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport Searchbar from \"../Searchbar/Searchbar\";\r\nimport ImageGallery from \"../ImageGallery/ImageGallery\";\r\nimport ButtonLoadMore from '../Button/Button';\r\nimport Modal from '../Modal/Modal';\r\nimport imagesAPI from \"../../services/imagesApi\";\r\nimport   \"./App.css\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    images: [],\r\n    isLoading: false,\r\n    error: null,\r\n    query: '',\r\n    modalIsOpen: false,\r\n    largeImageURL: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    if(this.state.query) {\r\n      this.fetchImages()\r\n    }\r\n    window.addEventListener('keydown', this.handleKeyPress)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyPress)\r\n  }\r\n\r\n  fetchImages = (query) => {\r\n    // imagesAPI.resetPage()\r\n    this.setState({ isLoading: true, query: query, images: [] });\r\n    \r\n    imagesAPI.fetchImages(query)\r\n      .then(({ data }) => this.setState({ images: [...data.hits] }))\r\n      .catch((error) => this.setState({ error }))\r\n      .finally(() => {\r\n        this.setState({ isLoading: false });\r\n      });\r\n  }\r\n\r\n  handleLoadMoreImages = () => {\r\n    this.setState({ isLoading: true });\r\n    imagesAPI.fetchImages(this.state.query)\r\n      .then(({ data }) =>{\r\n        this.setState((state) => ({ images: [...state.images, ...data.hits] }));\r\n        this.windowScrollTo()\r\n      })\r\n      .catch((err) => console.error(err))\r\n      .finally(() => this.setState({ isLoading: false }));\r\n  }\r\n\r\n  windowScrollTo () {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  }\r\n\r\n  handleModalOpen = (src) => {\r\n    this.setState({\r\n      modalIsOpen: true,\r\n      largeImageURL: src,\r\n    })\r\n  }\r\n\r\n  handleCloseModal = (e) => {\r\n    if(e.target.className === 'Overlay') {\r\n      this.closeModal()\r\n    }\r\n  }\r\n\r\n  handleKeyPress = (e) => {\r\n    if (e.code === \"Escape\") this.closeModal();\r\n  };\r\n  \r\n  closeModal = () => {\r\n    this.setState({\r\n      modalIsOpen: false,\r\n      largeImageURL: '',\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    const { images, isLoading, error, modalIsOpen, largeImageURL } = this.state;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Searchbar onSubmit={this.fetchImages} />\r\n        {error && <p>Whoops, somthing went wrong: {error.message}</p>}\r\n        {images.length > 0 && <ImageGallery images={images} onClick={this.handleModalOpen}  />}\r\n        {isLoading && (\r\n          <div className=\"loader\">\r\n            <Loader type=\"Puff\" color=\"#00BFFF\" height={100} width={100} timeout={3000} />\r\n          </div>\r\n        )}\r\n        {images.length > 0 && <ButtonLoadMore  loadMore={this.handleLoadMoreImages} />}\r\n        {!!modalIsOpen && <Modal largeImageURL={largeImageURL} closeModal={this.handleCloseModal}/>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}